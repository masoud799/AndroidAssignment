plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlinx-serialization'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

dependencies {

    implementation project(":common")
    implementation project(':data')

    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // Add dependencies
    implementation "javax.inject:javax.inject:$javaxInjectVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"

    // KotlinX Serialization
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$kotlinxVersion"

    // Javax for inject
    implementation "javax.inject:javax.inject:$javaxInjectVersion"

    // Test
    testImplementation "junit:junit:$junitVersion"
    // testImplementation for pure JVM unit tests
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines"
    // Run Blocking Test
    testImplementation "androidx.arch.core:core-testing:$coreTestingVersion"
    // Truth
    testImplementation "com.google.truth:truth:$truthVersion"
    // For small test - large test annotations
    testImplementation "androidx.test:runner:$testRunnerVersion"
    // Mock objects
    testImplementation "io.mockk:mockk:$mockkVersion"

}